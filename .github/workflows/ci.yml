name: CI & Event-Driven Evolution

on:
  # Normal quality gate on every code change
  push:
    branches: [ "main", "develop" ]
    paths-ignore:
      - 'docs/**'
    # evolution trigger: if troubleshooting log OR rules changed
    paths:
      - '**'
  pull_request:
    branches: [ "main" ]
  # manual trigger â€“ no time notion involved
  workflow_dispatch:
    inputs:
      evolve:
        description: "Run prompt_evolve.py and open a PR"
        required: false
        default: "true"

env:
  SUPABASE_URL:        ${{ secrets.SUPABASE_URL }}
  SUPABASE_ANON_KEY:   ${{ secrets.SUPABASE_ANON_KEY }}
  VERCEL_TOKEN:        ${{ secrets.VERCEL_TOKEN }}
  VERCEL_ORG_ID:       ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID:   ${{ secrets.VERCEL_PROJECT_ID }}

jobs:

# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
#  Quality Gate   (always runs)
# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: 18, cache: 'npm' }
      - run: npm ci
      - run: npm run lint
      - run: npm run format:check
      - run: |
          npm audit --production --json > audit.json
          crit=$(jq '.metadata.vulnerabilities.critical' audit.json)
          high=$(jq '.metadata.vulnerabilities.high' audit.json)
          if [ "$crit" != "0" ] || [ "$high" != "0" ]; then
            echo "High/Critical vulns detected"; exit 1; fi
      - run: npm test -- --coverage --coverageReporters=json-summary
      - run: |
          pct=$(jq '.total.lines.pct' coverage/coverage-summary.json)
          echo "coverage=$pct%"; [ "$pct" -ge 70 ] || exit 1
      - run: npm run build
      - name: Deploy Preview (PRs)
        if: github.event_name == 'pull_request'
        run: |
          npx vercel pull --yes --environment=preview \
            --token=$VERCEL_TOKEN --org=$VERCEL_ORG_ID --project=$VERCEL_PROJECT_ID
          npx vercel deploy --prebuilt --token=$VERCEL_TOKEN
      - name: Deploy Production (main)
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: |
          npx vercel pull --yes --environment=production \
            --token=$VERCEL_TOKEN --org=$VERCEL_ORG_ID --project=$VERCEL_PROJECT_ID
          npx vercel deploy --prebuilt --prod --token=$VERCEL_TOKEN

# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
#  Prompt-Evolution  (runs only if:
#      â€¢ troubleshooting log OR rules changed in this push, OR
#      â€¢ user manually triggers workflow_dispatch)
# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
  evolve:
    if: |
      github.event_name == 'workflow_dispatch' ||
      contains(github.event.head_commit.message, 'TROUBLESHOOTING_LOG') ||
      contains(github.event.head_commit.message, '.cursor/rules')
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v4
        with: { token: ${{ secrets.GH_PAT }} }   # personal token to create PR
      - uses: actions/setup-python@v4
        with: { python-version: '3.10' }
      - name: Run prompt_evolve
        run: python scripts/prompt_evolve.py
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
          commit-message: "feat(rules): experimental mutation from prompt_evolve"
          title: "ðŸ¤– Prompt-Evolve proposal"
          body: "Auto-generatedâ€”merge if tests stay green."
          branch: "ai/prompt-evolve"
          delete-branch: true
